---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

// 全記事を取得
const posts = await getCollection("posts");

// カテゴリーの集計
const categoryCount = posts.reduce(
  (acc: Record<string, number>, post: CollectionEntry<"posts">) => {
    const category = post.data.category;
    if (category) {
      acc[category] = (acc[category] || 0) + 1;
    }
    return acc;
  },
  {}
);

// カテゴリーを記事数順にソート
const categories = Object.entries(categoryCount)
  .map(([name, count]) => ({
    name,
    count,
    slug: name.toLowerCase().replace(/\s+/g, "-"),
  }))
  .sort((a, b) => b.count - a.count);
---

<div class="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm">
  <h2 class="text-lg font-semibold mb-4">Categories</h2>
  <ul class="space-y-2">
    {
      categories.map((category) => (
        <li class="flex justify-between items-center">
          <a
            href={`/categories/#${category.slug}`}
            class="text-gray-700 dark:text-gray-300 hover:text-primary transition-colors category-link"
          >
            {category.name}
            <span class="ml-2 text-gray-500 dark:text-gray-400">
              ({category.count})
            </span>
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script>
  function handleCategoryClick(e: Event) {
    const anchor = e.currentTarget as HTMLAnchorElement;
    const href = anchor.getAttribute("href");
    if (href) {
      e.preventDefault();
      const hash = href.split("#")[1];
      window.history.pushState(null, "", `/categories/#${hash}`);
      window.dispatchEvent(new HashChangeEvent("hashchange"));
    }
  }

  // カテゴリーリンクのクリックイベントハンドラを設定
  document.querySelectorAll(".category-link").forEach((anchor) => {
    anchor.addEventListener("click", handleCategoryClick);
  });
</script>
