---
import { getCollection } from "astro:content";
import { PROFILE_CONFIG } from "../config";
import { Image } from "astro:assets";

// 全記事を取得してカテゴリーとタグの集計を行う
const posts = await getCollection("posts");

// カテゴリーの集計
const categories = posts.reduce(
  (acc, post) => {
    const category = post.data.category || "Uncategorized";
    acc[category] = (acc[category] || 0) + 1;
    return acc;
  },
  {} as Record<string, number>
);

// タグの集計（大文字小文字を正規化）
const tags = posts.reduce(
  (acc, post) => {
    post.data.tags?.forEach((tag) => {
      const normalizedTag = tag.toLowerCase();
      if (!acc[normalizedTag]) {
        acc[normalizedTag] = {
          name: tag, // オリジナルの表記を保持
          count: 0,
        };
      }
      acc[normalizedTag].count++;
    });
    return acc;
  },
  {} as Record<string, { name: string; count: number }>
);

// カテゴリーとタグをそれぞれ記事数順にソート
const sortedCategories = Object.entries(categories).sort(
  ([, a], [, b]) => b - a
);
const sortedTags = Object.entries(tags)
  .sort(([, a], [, b]) => b.count - a.count)
  .map(([key, value]) => ({
    tag: value.name,
    count: value.count,
  }));
---

<div class="sidebar-nav">
  <Image
    src={PROFILE_CONFIG.avatar}
    alt={PROFILE_CONFIG.name}
    width={96}
    height={96}
    loading="eager"
    class="profile-image"
  />

  <nav class="nav-sections">
    <div class="nav-section">
      <h2 class="nav-title">Categories</h2>
      <ul class="nav-list">
        {
          sortedCategories.map(([category, count]) => (
            <li class="nav-item">
              <a
                href={`/categories/${category.toLowerCase()}`}
                class="nav-link group"
                data-astro-prefetch
              >
                <span class="nav-text">{category}</span>
                <span class="nav-count">{count}</span>
              </a>
            </li>
          ))
        }
      </ul>
    </div>

    <div class="nav-section">
      <h2 class="nav-title">Tags</h2>
      <div class="tags-cloud">
        {
          sortedTags.map(({ tag, count }) => (
            <a
              href={`/tags/${tag.toLowerCase()}`}
              class="tag-item"
              data-astro-prefetch
            >
              <span class="tag-text">#{tag}</span>
              <span class="tag-count">({count})</span>
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</div>

<style>
  .sidebar-nav {
    @apply flex flex-col items-center p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md;
  }

  .profile-image {
    @apply w-24 h-24 rounded-full mb-6 border-4 border-white dark:border-gray-700 shadow-md;
  }

  .nav-sections {
    @apply w-full space-y-8;
  }

  .nav-section {
    @apply w-full;
  }

  .nav-title {
    @apply text-lg font-semibold mb-4 text-gray-800 dark:text-gray-200;
  }

  .nav-list {
    @apply space-y-2;
  }

  .nav-item {
    @apply w-full;
  }

  .nav-link {
    @apply flex justify-between items-center p-2 rounded-md text-gray-600 hover:text-primary-500 hover:bg-gray-50 dark:text-gray-400 dark:hover:text-primary-400 dark:hover:bg-gray-700/50 transition-colors duration-200;
  }

  .nav-text {
    @apply text-sm;
  }

  .nav-count {
    @apply text-xs text-gray-500 dark:text-gray-500;
  }

  .tags-cloud {
    @apply flex flex-wrap gap-2;
  }

  .tag-item {
    @apply inline-flex items-center gap-1 px-3 py-1 text-sm rounded-full bg-gray-100 hover:bg-gray-200 dark:bg-gray-700/50 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 transition-colors duration-200;
  }

  .tag-count {
    @apply text-xs text-gray-500 dark:text-gray-500;
  }

  .theme-toggle,
  .login-button {
    display: none; /* 不要なスタイルを非表示に */
  }
</style>
