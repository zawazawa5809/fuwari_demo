---
import { SITE_CONFIG, PROFILE_CONFIG } from "../config";
import { ViewTransitions } from "astro:transitions";
import Header from "../components/Header.astro";
import Banner from "../components/Banner.astro";
import SidebarNav from "../components/SidebarNav.astro";
import "../styles/global.css";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  isHome?: boolean;
  toc?: { id: string; text: string; depth?: number }[];
}

const {
  title = SITE_CONFIG.title,
  description = SITE_CONFIG.description,
  image = SITE_CONFIG.ogImage,
  isHome = false,
  toc,
} = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="ja" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="canonical" href={canonicalURL} />
    <title>{title} - {SITE_CONFIG.siteName}</title>
    <ViewTransitions fallback="none" />

    <script>
      // Persistent elements during page transitions
      document.addEventListener("astro:before-preparation", (e) => {
        const banner = document.querySelector(".banner-container");
        const sidebar = document.querySelector(".sidebar-nav");
        if (banner) e.persist(banner);
        if (sidebar) e.persist(sidebar);
      });
    </script>
  </head>

  <body class="bg-gray-50 dark:bg-gray-900">
    <div class="min-h-screen flex flex-col">
      <div id="header-wrapper" class="header-wrapper" transition:persist>
        <Header />
      </div>

      <div id="banner-wrapper" class="banner-wrapper" transition:persist>
        <Banner isHome={isHome} />
      </div>

      <div class="container mx-auto px-4 py-8">
        <div class="flex flex-col lg:flex-row gap-8">
          <aside
            id="sidebar-wrapper"
            class="lg:w-64 lg:flex-shrink-0"
            transition:persist
          >
            <div class="lg:sticky lg:top-8">
              <SidebarNav />
            </div>
          </aside>
          <main class="flex-1" transition:animate="slide">
            <slot />
          </main>
        </div>
      </div>
    </div>
  </body>
</html>

<script>
  document.addEventListener("astro:before-preparation", (e) => {
    const event = e as unknown as App.BeforePreparationEvent;
    const sidebar = document.querySelector(".sidebar-nav");
    if (sidebar) {
      event.persist(sidebar);
    }
  });

  document.addEventListener("astro:after-navigation", () => {
    const main = document.querySelector("main") as HTMLElement;
    if (main) {
      main.tabIndex = -1;
      main.focus({ preventScroll: true });
    }

    window.scrollTo({
      top: 0,
      behavior: document.querySelector("[data-astro-transition]")
        ? "auto"
        : "smooth",
    });
  });

  document.addEventListener("astro:page-load", () => {
    // 画像の遅延ロード
    if ("loading" in HTMLImageElement.prototype) {
      document
        .querySelectorAll<HTMLImageElement>("img[loading='lazy']")
        .forEach((img) => {
          if (img.dataset.src) {
            img.src = img.dataset.src;
          }
        });
    }
  });

  // 永続要素の事前準備
  document.addEventListener("astro:before-preparation", (e) => {
    const event = e as unknown as App.BeforePreparationEvent;
    ["header-wrapper", "banner-wrapper", "sidebar-wrapper"].forEach((id) => {
      const element = document.getElementById(id);
      if (element) event.persist(element);
    });
  });

  // ページ遷移後の処理
  document.addEventListener("astro:after-swap", () => {
    // 永続要素の表示を確実に維持
    ["header-wrapper", "banner-wrapper", "sidebar-wrapper"].forEach((id) => {
      const element = document.getElementById(id);
      if (element) {
        element.style.opacity = "1";
        element.style.visibility = "visible";
      }
    });
  });
</script>

<style is:global>
  /* Base transitions */
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation: none;
    mix-blend-mode: normal;
  }

  /* Persistent elements */
  .header-wrapper,
  .banner-wrapper,
  aside {
    view-transition-name: persist;
    contain: paint;
  }

  .sidebar-nav {
    view-transition-name: sidebar;
    contain: paint;
  }

  ::view-transition-group(persist) {
    animation: none;
  }

  /* Content fade animation */
  main {
    view-transition-name: main;
  }

  ::view-transition-old(main) {
    animation: fade-out 0.15s ease-out;
  }

  ::view-transition-new(main) {
    animation: fade-in 0.15s ease-out;
  }

  @keyframes fade-out {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    ::view-transition-group(*),
    ::view-transition-old(*),
    ::view-transition-new(*) {
      animation: none;
    }
  }

  /* Performance optimizations */
  .banner-wrapper,
  aside {
    contain: layout style paint;
    content-visibility: auto;
  }

  /* 永続要素のトランジション */
  .header-wrapper,
  .banner-wrapper,
  #sidebar-wrapper {
    view-transition-name: persist;
    contain: layout style paint;
  }

  ::view-transition-group(persist) {
    animation: none;
    mix-blend-mode: normal;
  }

  /* メインコンテンツのトランジション */
  main {
    view-transition-name: main;
  }

  ::view-transition-old(main),
  ::view-transition-new(main) {
    animation: none;
    mix-blend-mode: normal;
  }

  /* パフォーマンス最適化 */
  .header-wrapper,
  .banner-wrapper,
  #sidebar-wrapper {
    will-change: transform;
    backface-visibility: hidden;
    transform: translateZ(0);
  }

  /* アクセシビリティ対応 */
  @media (prefers-reduced-motion: reduce) {
    ::view-transition-group(*),
    ::view-transition-old(*),
    ::view-transition-new(*) {
      animation: none;
    }
  }
</style>
