---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';

const posts = await getCollection('posts');
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// 年ごとに記事をグループ化
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = new Date(post.data.pubDate).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof posts>);

// 年を降順にソート
const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout title="Archive" description="All posts archive">
  <div class="max-w-4xl mx-auto">
    <h1 class="text-3xl font-bold mb-12">Archive</h1>
    
    <div class="relative pl-8 before:absolute before:inset-0 before:ml-5 before:w-0.5 before:-translate-x-px before:bg-gradient-to-b before:from-transparent before:via-gray-300 before:dark:via-gray-700 before:to-transparent">
      {years.map(year => (
        <div class="relative py-6">
          <!-- 年マーカー -->
          <div class="sticky top-20 z-10 mb-6 -ml-8 bg-white dark:bg-gray-900 bg-opacity-90 dark:bg-opacity-90 backdrop-blur-sm">
            <div class="flex items-center">
              <div class="flex items-center justify-center w-8 h-8 rounded-full border-2 border-primary bg-white dark:bg-gray-900">
                <div class="w-2.5 h-2.5 rounded-full bg-primary"></div>
              </div>
              <h2 class="text-2xl font-bold ml-4">{year}</h2>
            </div>
          </div>

          <div class="space-y-8">
            {postsByYear[year].map(post => (
              <article class="relative group pl-8 before:absolute before:left-0 before:top-3 before:w-3 before:h-3 before:rounded-full before:border-2 before:border-gray-300 before:dark:border-gray-600 before:bg-white before:dark:bg-gray-800 before:group-hover:border-primary before:transition-colors">
                <div class="flex flex-wrap items-center justify-between mb-1 text-sm">
                  <FormattedDate
                    date={post.data.pubDate}
                    class="text-gray-500 dark:text-gray-400"
                  />
                  <div class="flex gap-2">
                    {post.data.tags.map(tag => (
                      <a href={`/tags/#${tag.toLowerCase()}`} class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400">
                        #{tag}
                      </a>
                    ))}
                  </div>
                </div>
                <a href={`/posts/${post.slug}/`} class="block group">
                  <div class="bg-white dark:bg-gray-800/50 rounded-lg p-4 group-hover:bg-gray-50 dark:group-hover:bg-gray-800/70 transition-colors">
                    <h3 class="text-xl font-medium mb-2 text-gray-900 dark:text-gray-100 group-hover:text-primary transition-colors">
                      {post.data.title}
                    </h3>
                    <p class="text-gray-600 dark:text-gray-400">
                      {post.data.description}
                    </p>
                  </div>
                </a>
              </article>
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
</BaseLayout>

<style>
  @keyframes fadeInMove {
    0% {
      opacity: 0;
      transform: translateX(-1rem);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  article {
    animation: fadeInMove 0.5s ease-out forwards;
    opacity: 0;
  }

  article:nth-child(1) { animation-delay: 0.1s; }
  article:nth-child(2) { animation-delay: 0.2s; }
  article:nth-child(3) { animation-delay: 0.3s; }
  article:nth-child(4) { animation-delay: 0.4s; }
  article:nth-child(n+5) { animation-delay: 0.5s; }
</style>